
Original statement
-------------------

This is stolen from Nikolai ofc:
https://natanaso.github.io/ece276a/ref/ECE276A_9_ParticleFilterSLAM.pdf


Initial particle set µ (k) = (0, 0, 0)T with weights α (k) = 1/N

I Use the first laser scan to initialize the map:
    1. use the head angle to remove the ground plane from the scan
    2. convert the scan to Cartesian coordinates
    3. transform the scan from the lider frame to the body frame and then to
       the world frame
    4. convert the scan to cells (via bresenham2D or cv2.drawContours) and
       update the map log-odds

* Use an odometry motion model to predict motion for each particle
* Use the laser scan from each particle to compute map correlation (via
  getMapCorrelation) and update the particle weights

* Choose the best particle, project the laser scan, and update the map
  log-odds (in general, each particle should maintain its own map)

* Textured map: use the RGBD images from the best particle’s pose to
assign colors to the occupancy grid cells


Some kid's solution
-------------------
https://github.com/jevancc/ece276a-particle-filter-slam
https://github.com/Ag8833/ECE-276A-Sensing-and-Estimation-in-Robotics/tree/master/276Project2
